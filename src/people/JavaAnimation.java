/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package people;

/**
 *
 * @author Acer
 */

import gui.Person;
import java.awt.Color;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.Toolkit;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.net.URL;
import java.util.Random;
import java.sql.DriverManager;
import java.sql.Connection;
import java.sql.*;  
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Base64;
import java.util.Comparator;
import java.util.List;
import java.util.Map;
import java.util.stream.Collectors;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JPanel;


public class JavaAnimation extends javax.swing.JFrame {
    private static final String username = "root";
    private static final String password = "Monh123456@";
    private static final String dataConn = "jdbc:mysql://localhost:3306/my";
    private Image[] imagedata = new Image[13];
    public List<Person> person = new ArrayList<Person>();
    public BufferedImage image = null;
    
    Graphics2D g1;
    Thread animationThread;
    
    static final int MAX_X = 900;
    static final int MAX_Y = 388;

    /**
     * Creates new form Form
     * @param g
     */
    
 
    public JavaAnimation() {

  
        try {
                image = ImageIO.read(new File("/background.png"));

        }
        catch(Exception e) {
            
        }
        pack();
        
        initComponents();
 
        g1 = (Graphics2D) panelCanvas.getGraphics();
        panelCanvas.paintComponents(g1);
       
        super.setSize(1920, 1080);
    }

    /**
     * This method is called from within the constructor to initialize the form.WARNING: Do NOT modify this code.
     * The content of this method is always
 regenerated by the Form Editor.
     * @param data
     */

    
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelCanvas = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        panelCanvas.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 0));
        panelCanvas.setPreferredSize(new java.awt.Dimension(1080, 894));

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton1.setText("Эхлэх");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 30, 160, 40));

        jButton2.setText("Зогсоох");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 30, 160, 40));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/people/background.png"))); // NOI18N
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, -210, 2430, 1480));

        javax.swing.GroupLayout panelCanvasLayout = new javax.swing.GroupLayout(panelCanvas);
        panelCanvas.setLayout(panelCanvasLayout);
        panelCanvasLayout.setHorizontalGroup(
            panelCanvasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelCanvasLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(1340, 1340, 1340))
        );
        panelCanvasLayout.setVerticalGroup(
            panelCanvasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelCanvasLayout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelCanvas, javax.swing.GroupLayout.PREFERRED_SIZE, 1651, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(257, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelCanvas, javax.swing.GroupLayout.DEFAULT_SIZE, 1280, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        
       
      
        animationThread = new Thread(new Runnable() {
         
            Random r = new Random();
            
            Color[] colorList = {Color.red, Color.blue, Color.orange, Color.BLACK, Color.GRAY};
            @Override
            public void run() {
                
              
                
                try {
                    Class.forName("com.mysql.cj.jdbc.Driver");
                    Connection conn = DriverManager.getConnection(dataConn, username, password);
                    Statement statement1 = conn.createStatement();
                    Statement statement2 = conn.createStatement();
                    String sql = "SELECT * FROM Location INNER JOIN TAG ON Location.T_id = Tag.TAG_ID;";
                    String sql1 = "SELECT * FROM IMAGE_ID;";
                    ResultSet rs = statement1.executeQuery(sql);
                    ResultSet rs1 = statement2.executeQuery(sql1);
                    
                    
                    
                    while (rs1.next()) {

                    try {
                      URL url = new URL(rs1.getString("IMAGE_LINK"));
                        imagedata[rs1.getInt("IMAGE_ID") - 1] = ImageIO.read(url);
                       }
                       
                       catch(Exception e){
                               System.err.println("" +e.getMessage());
                            }
                    
                     }
                     

                           

                     while (rs.next()) {
                         
                            if(rs.getInt("USE_CHECK") == 1)
                            {
                                person.add(new Person(rs.getInt("x"), rs.getInt("y"), rs.getInt("T_id"), rs.getString("Delivered_At"), rs.getString("TAG_NAME"), rs.getInt("IMG_ID")));
                           }
                            
                     }
                     

                }
                catch (Exception e) {

                }
                
                Map<String, List<Person>> personlistGrouped =  person.stream().collect(Collectors.groupingBy(w -> w.time));
                
          
      
              for(Map.Entry mp: personlistGrouped.entrySet()){  
                     List<Person> data1 = (ArrayList)mp.getValue();
                    
                       
                          try {
                     for (Person data : data1) {
                          int len = data.name.length();
                          g1.setColor(Color.red);
//                          g1.fillOval(data.x, data.y, 20, 20);
                          g1.drawImage(imagedata[data.img_id - 1], data.x, data.y, null);
                          g1.drawString(data.name, data.x, data.y + 35);

                        
                         
                         System.out.format(" %2d %2d %s %s %2d\n", data.x, data.y, data.name, data.time, len);
                         
                     }
                     
                         Thread.sleep(2000);
                               panelCanvas.repaint();
                               Thread.sleep(2000);
                          }
                      catch(Exception e){
                               System.err.println("" +e.getMessage());
                            }


                }
          
          
//                
//                List<List> lists = Arrays.asList(person1,person2,person3, person4, person5); 
//                int max = 0;
//                for (List list : lists) {
//                    if (list.size() > max) {
//                        max = list.size();
//                       
//                    }
//                }
//                  for(int i= 0; i< max - 1 ; i++) {
//                           System.out.println(i);
//                            boolean inBounds1 = (i >= 0) && (i < person1.size());
//                            boolean inBounds2 = (i >= 0) && (i < person2.size());
//                            boolean inBounds3 = (i >= 0) && (i < person3.size());
//                            boolean inBounds4 = (i >= 0) && (i < person4.size());
//                            boolean inBounds5 = (i >= 0) && (i < person5.size());
//                            
//                          if(inBounds1)
//                           {
//                               g1.setColor(colorList[0]);
//                                g1.fillOval(person1.get(i).x, person1.get(i).y, 50, 50);
//                          }
//                           if(inBounds2)
//                           {
//                                g2.setColor(colorList[1]);
//                                g2.fillOval(person2.get(i).x, person2.get(i).y, 50, 50);
//                           }
//                           if(inBounds3)
//                           {
//                           g3.setColor(colorList[2]);
//                           g3.fillOval(person3.get(i).x, person3.get(i).y, 50, 50);
//                           }
//                            if(inBounds4)
//                           {
//                           g4.setColor(colorList[3]);
//                           g4.fillOval(person4.get(i).x, person4.get(i).y, 50, 50);
//                           }
//                            if(inBounds5)
//                           {
//                               g5.setColor(colorList[4]);
//                               g5.fillOval(person5.get(i).x, person5.get(i).y, 50, 50);
//                           }
//                           
//                          try {
//                               Thread.sleep(200);
//                               panelCanvas.repaint();
//                               Thread.sleep(300);
//                          }
//                           catch(Exception e){
//                               System.err.println("" +e.getMessage());
//                            }
//                          
//                         
//                          }
//          
//             
                
//                 for (Person data : person1) {
//                     System.out.print(person1.size());
//                    System.out.format(" %2d %2d\n", data.x, data.y);
//                  }
                               
            }
        });
        animationThread.start();
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed

        
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JavaAnimation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JavaAnimation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JavaAnimation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JavaAnimation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JavaAnimation().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel panelCanvas;
    // End of variables declaration//GEN-END:variables
}


